@startuml
title Weekly Planning â€“ Domain & Services (MVP)

/' ======= Domain Core ======= '/
class Task {
    +Integer id
    +String name
    +String description
    +TaskPriority priority
    +LocalDate dueDate
    +Integer durationMinutes
}

class Backlog {
    + Task[] unplannedTasks
}

enum TaskPriority {
    LOW
    MEDIUM
    HIGH
}


class UserPreference {
    +LocalTime dayStart
    +LocalTime dayEnd
    +Break[] breaks // TODO: later
}

class ISOWeek {
    +Integer year
    +Integer week
}

class WeeklyPlan {
    +ISOWeek isoWeek
    +DayPlan[] dayPlans
}

class DayPlan {
    +Day day
    +PlanEntry[] taskEntries
    +Boolean addTaskEntry(PlanEntry taskEntry)
}


enum Day {
    MONDAY
    TUESDAY
    WEDNESDAY
    THURSDAY
    FRIDAY
    SATURDAY
    SUNDAY
}

class PlanEntry {
    +Integer id
    +Integer taskId
    +Integer dayPlanId
    +Integer dayIndex  // 1..7
    +ZonedDateTime startAt
    +ZonedDateTime endAt
}

class SimpleWeeklyPlanner implements Planner {
    +WeeklyPlan plan(Backlog backlog, UserPreference userPreference)
}


interface Planner {
    +WeeklyPlan plan(Backlog backlog, UserPreference userPreference)
}

'/ ======= Relationships in the domain layer ======= '/
Task *-- TaskPriority: assumes a
Planner --> Backlog: uses
Planner --> UserPreference: uses
Planner --> WeeklyPlan: creates
WeeklyPlan *-- DayPlan: has many
WeeklyPlan *-- ISOWeek: has one
DayPlan *-- PlanEntry: has many
DayPlan *-- Day: has one
@enduml